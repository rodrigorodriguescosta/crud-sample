name: crud-sample - CloudRun

on:
  push:

env:
  SERVICE_NAME: crud-sample
  PROJECT_ID: codetips-358318

jobs:
  test_and_build:
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: rodrigorodriguescosta/branch-name@v2

      # Checkouts
      - name: Checkout o repositorio atual
        uses: actions/checkout@v2

      # BACKEND
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Test backend - Go
        run: |
          cd backend
          go test -v ./...

      - name: Build backend
        shell: bash
        run: |
          cd backend
          go mod tidy
          env GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o ../dist/linux/app main.go
      - name: Generating build artifacts to dist folder
        uses: actions/upload-artifact@v2
        with:
          name: dist-linux
          path: dist/linux

  deploy:
    runs-on: ubuntu-latest
    needs: test_and_build
    steps:
      - uses: rodrigorodriguescosta/branch-name@v2
      - name: Setup gcloud CLI Test
        uses: google-github-actions/setup-gcloud@main
        with:
          export_default_credentials: true
          service_account_email: ${{ secrets.GCP_EMAIL_TEST }}
          service_account_key: ${{ secrets.GCP_KEY_TEST }}

      - name: gcloud Set up
        run: |
          gcloud config set project $PROJECT_ID
      - name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: dist-linux

      - name: Build and push image to Google Container Registry
        run: |
          gcloud builds submit -t gcr.io/$PROJECT_ID/$SERVICE_NAME
      - name: Deploy to Cloud Run - Dev/Test
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          gcloud run deploy $SERVICE_NAME  \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME \
            --port 80 \
            --memory 512Mi \
            --max-instances 1 \
            --update-labels env=test \
            --add-cloudsql-instances $CLOUD_SQL_INSTANCE_NAME_TEST \
            --allow-unauthenticated \
            --set-env-vars DB_HOST=$DB_HOST \
            --set-env-vars DB_USER=$DB_USER \
            --set-env-vars DB_PASSWORD=$DB_PASSWORD \
            --set-env-vars DB_PORT=$DB_PORT \
            --set-env-vars JWT_SECRET=$JWT_SECRET \
            --platform managed \
            --timeout 30 \
            --concurrency 5 \
            --region us-central1
          gcloud run services update-traffic $SERVICE_NAME --platform managed --to-latest --region us-central1
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: dist-linux
          failOnError: false