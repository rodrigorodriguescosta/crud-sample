events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

     upstream api {
        server 127.0.0.1:8000 max_fails=3 fail_timeout=5s;
     }

    limit_req_zone $binary_remote_addr zone=perip:10m rate=10r/s;

     # API
     server {

        listen 0.0.0.0:80;
        server_name _;
        charset     utf-8;

        # max upload size
        large_client_header_buffers 4 2M;
        client_body_in_file_only clean;
        client_body_buffer_size 30M;
        send_timeout 300s;
        client_max_body_size 30M;

        # compactacao de dados trafegados para todas as rotas
        gzip on;
        gzip_vary on;
        gzip_min_length 10240; # so faca a compactacao a partir de 10 kb
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/json;


        sendfile           on;

        location / {
           root           /home/web;
           index          index.html;
           try_files $uri $uri/ /index.html =404;
           expires 365d;
           gzip_proxied expired no-cache no-store private auth;
           gzip_disable "MSIE [1-6]\.";
         }

         location /api/ {
            limit_req zone=perip burst=5 nodelay;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # enable this if and only if you use HTTPS
            # proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $host;
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://api;
        }
    }

}


